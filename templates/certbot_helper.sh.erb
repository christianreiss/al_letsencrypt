#! /bin/bash

#
# Le Franzose!
#
LE_BIN="<%= scope.lookupvar('::al_letsencrypt::le_binary')%>"
LE_ARGS="--webroot --noninteractive --keep-until-expiring --quiet --agree-tos"
LE_LOG="<%= scope.lookupvar('::al_letsencrypt::le_logdir')%>/letsencrypt.log"
LE_EMAIL="<%= scope.lookupvar('::al_letsencrypt::email')%>"
LE_DOMAIN="$1"
LE_CRT="<%= scope.lookupvar('::al_letsencrypt::le_dir')%>/${LE_DOMAIN}/cert.pem"
LE_DOCROOT="/var/www/vhosts/${LE_DOMAIN}"
LE_DOCROOT_FAILBACK="/var/www/vhosts/<%=@fqdn%>"
LE_DOCROOT_OVERRIDE="<%= scope.lookupvar('::al_letsencrypt::docroot_override')%>"

#
# Logging and Error.
#
function error {
  echo "`date +%H:%M:%S` :: Error :: $*"
  echo "`date +%H:%M:%S` :: Error :: $*" >> ${LE_LOG}
  exit 2
}

function log {
  echo "`date +%H:%M:%S` :: $*"
  echo "`date +%H:%M:%S` :: $*" >> ${LE_LOG}
}

#
# Sanity Checks
#
if [ ! -e ${LE_BIN} ]; then
  error "certbot not found (${LE_BIN})"
fi

#
# Must be root.
#
if [ $(whoami) != 'root' ]; then
  error "Must be root."
fi

#
# We need a Domain.
#
if [ "${LE_DOMAIN}" == "" ]; then
  error "Please supply a domain."
fi

#
# We need a docroot.
#
if [ ${LE_DOCROOT_OVERRIDE} == "" ]; then
  if [ ! -e "${LE_DOCROOT}" ]; then
    if [ ! -e "${LE_DOCROOT_FAILBACK}" ]; then
      error "Docroot ${LE_DOCROOT} does not exist."
    else
      DOCROOT="${LE_DOCROOT_FAILBACK}"
    fi
  else
    DOCROOT="${LE_DOCROOT}"
  fi
else
  DOCROOT="${LE_DOCROOT_OVERRIDE}"
fi

#
# Check for domain existance.
#
if [ -e ${LE_CRT} ]; then
  log "No action needed, cert for ${domain} already existing."
  exit 0
fi

#
# Email or unsafe registratrion?
#
if [ "${LE_EMAIL}" != "" ] ;
  EMAIL_ARG="--email ${LE_EMAIL}"
else
  EMAIL_ARG="--allow-unsafe-registration"
fi


#
# Run it.
#
log "Starting certbox for ${LE_DOMAIN}."
${LE_BIN} certonly ${LE_ARGS} --webroot-path ${DOCROOT} ${EMAIL_ARG} -d ${LE_DOMAIN} || error "Unable to request certificate for ${LE_DOMAIN}."
log "Certificate for ${LE_DOMAIN} created successfully."
